train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2], nrows=50)
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity", nrows=50)
train <- cbind(train_activities, train)
mergedData <- rbind(test,train)
View(col.names)
?grepl
grepl("-mean", col.names[1,2])
choose <- grepl("-mean", col.names[,2])
sum(choose)
choose_std <- grepl("-std", col.names[,2])
View(train)
choose_mean <- grepl("-mean", col.names[,2])
?or
sum(choose_std)
choose <- (choose_mean | choose_std)
sum(choose)
extractedStats <- mergedData[choose]
View(extractedStats)
View(col.names)
View(mergedData)
col.names <- names(mergedData)
choose_mean <- grepl("-mean", col.names[,2])
choose_std <- grepl("-std", col.names[,2])
choose <- (choose_mean | choose_std)
extractedStats <- mergedData[choose]
choose_mean <- grepl("-mean", col.names)
choose_std <- grepl("-std", col.names)
choose <- (choose_mean | choose_std)
extractedStats <- mergedData[choose]
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
rm(list=ls())
cat("\014")
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2], nrows=50)
test <- cbind(test_activities, test)
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity", nrows=50)
test <- cbind(test_activities, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2], nrows=50)
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity", nrows=50)
train <- cbind(train_activities, train)
mergedData <- rbind(test,train)
choose_mean <- grepl("-mean", col.names[,2])
choose_std <- grepl("-std", col.names[,2])
choose <- c(TRUE, (choose_mean | choose_std))
sum(choose)
extractedStats <- mergedData[choose]
View(extractedStats)
View(extractedStats)
""""""""""""""""""""""""""""""""""""""""""""""""""Step 1""""""""""""""""""""""""""""""""""""
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Step 1%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt", col.names="Activity Labels")
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt", col.names=C("Activity", "Activity Label"))
View(descriptiveActivityNames)
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
View(descriptiveActivityNames)
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
View(descriptiveActivityNames)
descriptiveActivityNames[1,2]
eS <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2] )
library("dplyr")
eS <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2] )
View(eS)
View(descriptiveActivityNames)
View(extractedStats)
View(extractedStats)
choose_mean <- grepl("mean...", col.names[,2])
choose_std <- grepl("std...", col.names[,2])
choose <- c(TRUE, (choose_mean | choose_std))
sum(choose)
var.names <- names(extractedStats)
sum(choose_std)
sum(choose_mean)
choose_mean <- grepl("mean..", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
sum(choose_mean)
sum(choose_std)
?grepl
choose_mean <- grepl("mean..", col.names[,2], fixed=TRUE)
sum(choose_mean)
not_choose <- grepl("meanFreq", col.names[,2])
sum(not_choose)
choose_mean <- grepl("mean..", col.names[,2])
not_choose <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, ((choose_mean & !not_choose) | choose_std))
sum(choose)
var.names <- gsub("Acc", "Accelerometer", var.names)
view(var.names)
View(train_activities)
View(var.names)
var.names <- gsub("Gyro", "Gyroscope", var.names)
View(var.names)
var.names <- gsub("Jerk", "Jerk.Signals", var.names)
var.names <- gsub("Mag", "Magnitude", var.names)
View(var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("mad", "Median.Absolute.Deviation", var.names)
View(var.names)
var.names <- gsub("mean...", "Mean.", var.names)
View(var.names)
sub("t", "time", "ttt")
gsub("t", "time", "ttt")
var.names <- sub("t.", "Time.", var.names)
var.names <- sub("f.", "Frequency", var.names)
View(var.names)
var.names <- names(extractedStats)
var.names <- sub("t", "Time.", var.names[2:length(var.names)])
View(var.names)
var.names <- c(var.names[1], sub("t", "Time.", var.names[2:length(var.names)]))
View(var.names)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- names(extractedStats)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std...", "Standard.Deviation.", var.names)
var.names <- gsub("mean...", "Mean.", var.names)
View(var.names)
var.names <- names(extractedStats)
var.names <- sub("t", "Time.", var.names, fixed=TRUE)
View(var.names)
var.names <- names(extractedStats)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean...", "Mean.", var.names)
View(var.names)
var.names <- names(extractedStats)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean", "Mean.", var.names)
View(var.names)
rm(list=ls())
cat("\014")
#run analysis
#setwd("~/GitHub/Get-Data-Assignment") setting directory in which there is unzipped UCI HAR Dataset
#Step 1
#we know that in file "features.txt" there are listed variables names, we'll use them to name
#columns in test and training results tables
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
# nrows=50 faster for preparation, change to -1 after finishing
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2], nrows=50)
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity", nrows=50)
test <- cbind(test_activities, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2], nrows=50)
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity", nrows=50)
train <- cbind(train_activities, train)
#files are constructed in the same way, we can just merge them by rbind
mergedData <- rbind(test,train)
#Step 2
#creating logical vector stating which columns to select in step 2.
choose_mean <- grepl("mean..", col.names[,2])
choose_Freq <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, ((choose_mean & !chooseFreq) | choose_std))
extractedStats <- mergedData[choose]
#Step 3
#load descriptive activity names
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
#name the activities in the data set by using mutate and reference to "descriptiveActivityNames"
library("dplyr")
extractedStats <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2])
#Step 4
var.names <- names(extractedStats)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean", "Mean.", var.names)
View(var.names)
cat("\014")
rm(list=ls())
#run analysis
#setwd("~/GitHub/Get-Data-Assignment") setting directory in which there is unzipped UCI HAR Dataset
#Step 1
#we know that in file "features.txt" there are listed variables names, we'll use them to name
#columns in test and training results tables
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
# nrows=50 faster for preparation, change to -1 after finishing
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2], nrows=50)
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity", nrows=50)
test <- cbind(test_activities, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2], nrows=50)
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity", nrows=50)
train <- cbind(train_activities, train)
#files are constructed in the same way, we can just merge them by rbind
mergedData <- rbind(test,train)
#Step 2
#creating logical vector stating which columns to select in step 2.
choose_mean <- grepl("mean..", col.names[,2])
choose_Freq <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, ((choose_mean & !choose_Freq) | choose_std))
extractedStats <- mergedData[choose]
#Step 3
#load descriptive activity names
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
#name the activities in the data set by using mutate and reference to "descriptiveActivityNames"
library("dplyr")
extractedStats <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2])
View(extractedStats)
var.names <- names(extractedStats)
View(var.names)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean..", "Mean.", var.names)
View(var.names)
?xtabs
View(extractedStats)
trial <- extractedStats
trial %>% group_by(Activity)
cat("\014")
trial <- trial %>% group_by(Activity)
View(trial)
?tidyr
??tidyr
?tapply
new5 <- tapply(trial, var.names, mean)
View(trial)
warnings()
cat("\014")
descriptiveActivityNames[,2]
new5 <- tapply(trial, descriptiveActivityNames[,2], mean)
new5 <- tapply(trial, trial[,1], mean)
trial[,1]
length(trial)
lenght(trial[,1])
length(trial[,1])
length(trial[1,])
new5 <- tapply(trial, trial[1,], mean)
View(trial)
?apply
new5 <- apply(trial, 2, mean)
?warnings
new5 <- apply(trial[2:67,], 2, mean)
trial %>% group_by("Activities")
View(trial)
View(trial)
trial %>% group_by("Activities") %>% summarize(names(trial)[2])
trial %>% group_by("Activities") %>% summarize(tBodyAcc.mean...X=mean(tBodyAcc.mean...X)
)
trial %>% group_by("Activities") %>% summarize(names(trial)=mean(names(trial)))
trial %>% group_by("Activities") %>% summarize( names(trial) = mean(names(trial)) )
?cast
??cast
library("reshape2")
View(trial)
melt(trial, trial[1,])
cat("\014")
new <- melt(trial, trial$Activity)
?group_by
trial <- group_by(trial, "Activity")
View(trial)
trial <- extractedStats
trial <- group_by(trial, trial$Activity)
View(trial)
car <-mtcars
View(car)
trial <- group_by(trial, Activity)
View(trial)
?split
trial <- extractedStats
trial <- split(trial, descriptiveActivityNames[,2])
trial <- extractedStats
trial <- split(trial, c("STANDING", "SITTING"))
fac <- descriptiveActivityNames[,2]
trial <- extractedStats
trial <- split(trial, fac )
summary(trial)
?arrange
?summarise_each
trial <- trial %>% group_by(Activity) %>% summarise_each(funs(mean))
trial <- extractedStats
trial <- trial %>% group_by(Activity) %>% summarise_each(funs(mean))
View(trial)
rm(list=ls())
cat("\014")
#run analysis
#setwd("~/GitHub/Get-Data-Assignment") setting directory in which there is unzipped UCI HAR Dataset
#Step 1
#we know that in file "features.txt" there are listed variables names, we'll use them to name
#columns in test and training results tables
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
# nrows=50 faster for preparation, change to -1 after finishing
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2], nrows=50)
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity", nrows=50)
test <- cbind(test_activities, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2], nrows=50)
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity", nrows=50)
train <- cbind(train_activities, train)
#files are constructed in the same way, we can just merge them by rbind
mergedData <- rbind(test,train)
#Step 2
#creating logical vector stating which columns to select in step 2.
choose_mean <- grepl("mean..", col.names[,2])
choose_Freq <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, ((choose_mean & !choose_Freq) | choose_std))
extractedStats <- mergedData[choose]
#Step 3
#load descriptive activity names
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
#name the activities in the data set by using mutate and reference to "descriptiveActivityNames"
library("dplyr")
extractedStats <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2])
#Step 4
#tidious work with giving variables descriptive names
var.names <- names(extractedStats)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean..", "Mean.", var.names)
names(extractedStats) <- var.names
#View(var.names)
#Step 5
MeansOfStats <- extractedStats %>% group_by(Activity) %>% summarise_each(funs(mean))
View(MeansOfStats)
rm(list=ls())
cat("\014")
#run analysis
#setwd("~/GitHub/Get-Data-Assignment") setting directory in which there is unzipped UCI HAR Dataset
#Step 1
#we know that in file "features.txt" there are listed variables names, we'll use them to name
#columns in test and training results tables
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2])
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity")
test <- cbind(test_activities, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2])
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity")
train <- cbind(train_activities, train)
#files are constructed in the same way, we can just merge them by rbind
mergedData <- rbind(test,train)
#Step 2
#creating logical vector stating which columns to select in step 2.
choose_mean <- grepl("mean..", col.names[,2])
choose_Freq <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, ((choose_mean & !choose_Freq) | choose_std))
extractedStats <- mergedData[choose]
#Step 3
#load descriptive activity names
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
#name the activities in the data set by using mutate and reference to "descriptiveActivityNames"
library("dplyr")
extractedStats <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2])
#Step 4
#tidious work with giving variables descriptive names
var.names <- names(extractedStats)
var.names <- c("Activity", sub("t", "Time.", var.names[2:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("", "", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean..", "Mean.", var.names)
names(extractedStats) <- var.names
#View(var.names)
#Step 5
MeansOfStats <- extractedStats %>% group_by(Activity) %>% summarise_each(funs(mean))
View(MeansOfStats)
View(col.names)
choose <- c(TRUE,  ((choose_mean & !choose_Freq) | choose_std))
rm(list=ls())
cat("\014")
#run analysis
#setwd("~/GitHub/Get-Data-Assignment") setting directory in which there is unzipped UCI HAR Dataset
#Step 1
#we know that in file "features.txt" there are listed variables names, we'll use them to name
#columns in test and training results tables
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2])
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity")
test_subject <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/subject_test.txt", col.names="Subject")
test <- cbind(test_activities, test_subject, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2])
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity")
train_subject <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/subject_train.txt", col.names="Subject")
train <- cbind(train_activities, train_subject, train)
#files are constructed in the same way, we can just merge them by rbind
mergedData <- rbind(test,train)
#Step 2
#creating logical vector stating which columns to select in step 2.
choose_mean <- grepl("mean..", col.names[,2])
choose_Freq <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, TRUE, ((choose_mean & !choose_Freq) | choose_std))
extractedStats <- mergedData[choose]
#Step 3
#load descriptive activity names
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
#name the activities in the data set by using mutate and reference to "descriptiveActivityNames"
library("dplyr")
extractedStats <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2])
#Step 4
#tidious work with giving variables descriptive names
var.names <- names(extractedStats)
var.names <- c("Activity", "Subject", sub("t", "Time.", var.names[3:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean..", "Mean.", var.names)
names(extractedStats) <- var.names
#View(var.names)
#Step 5
MeansOfStats <- extractedStats %>% group_by(Activity) %>% group_by(Subject) %>% summarise_each(funs(mean))
rm(list=ls())
#run analysis
#setwd("~/GitHub/Get-Data-Assignment") setting directory in which there is unzipped UCI HAR Dataset
#Step 1
#we know that in file "features.txt" there are listed variables names, we'll use them to name
#columns in test and training results tables
col.names <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/features.txt", nrows=561)
test <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/X_test.txt", col.names=col.names[,2])
test_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/y_test.txt", col.names="Activity")
test_subject <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/test/subject_test.txt", col.names="Subject")
test <- cbind(test_activities, test_subject, test)
train <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/X_train.txt", col.names=col.names[,2])
train_activities <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/y_train.txt", col.names="Activity")
train_subject <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/train/subject_train.txt", col.names="Subject")
train <- cbind(train_activities, train_subject, train)
#files are constructed in the same way, we can just merge them by rbind
mergedData <- rbind(test,train)
#Step 2
#creating logical vector stating which columns to select in step 2.
choose_mean <- grepl("mean..", col.names[,2])
choose_Freq <- grepl("meanFreq", col.names[,2])
choose_std <- grepl("std..", col.names[,2])
choose <- c(TRUE, TRUE, ((choose_mean & !choose_Freq) | choose_std))
extractedStats <- mergedData[choose]
#Step 3
#load descriptive activity names
descriptiveActivityNames <- read.table("~/GitHub/Get-Data-Assignment/UCI HAR Dataset/activity_labels.txt")
names(descriptiveActivityNames) <- c("Activity", "Activity Label")
#name the activities in the data set by using mutate and reference to "descriptiveActivityNames"
library("dplyr")
extractedStats <- mutate(extractedStats, Activity=descriptiveActivityNames[Activity, 2])
#Step 4
#tidious work with giving variables descriptive names
var.names <- names(extractedStats)
var.names <- c("Activity", "Subject", sub("t", "Time.", var.names[3:length(var.names)]))
var.names <- sub("f", "Frequency.", var.names)
var.names <- gsub("Acc", ".Accelerometer.", var.names)
var.names <- gsub("Gyro", ".Gyroscope.", var.names)
var.names <- gsub("Jerk", "Jerk.Signals.", var.names)
var.names <- gsub("Mag", "Magnitude.", var.names)
var.names <- gsub("std", "Standard.Deviation.", var.names)
var.names <- gsub("sTime.d", "Standard.Deviation.", var.names)
var.names <- gsub("mean..", "Mean.", var.names)
names(extractedStats) <- var.names
#View(var.names)
#Step 5
MeansOfStats <- extractedStats %>% group_by(Activity) %>% group_by(Subject) %>% summarise_each(funs(mean))
View(MeansOfStats)
View(mergedData)
View(extractedStats)
MeansOfStats <- extractedStats %>% group_by(Subject) %>% group_by(Activity) %>% summarise_each(funs(mean))
View(MeansOfStats)
MeansOfStats <- extractedStats %>% group_by(Activity, Subject) %>% summarise_each(funs(mean))
View(MeansOfStats)
?write.table
write.table(MeansOfStats, "Tidy_Data_Created_in_Step_5.txt", row.names=FALSE)
write.table(ls(), "variables.txt", row.names=FALSE)
View(col.names)
View(col.names)
